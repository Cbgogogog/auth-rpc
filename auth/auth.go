// Code generated by goctl. DO NOT EDIT.
// Source: authentication.proto

package auth

import (
	"context"

	"github.com/xh-polaris/auth-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SendVerifyCodeReq  = pb.SendVerifyCodeReq
	SendVerifyCodeResp = pb.SendVerifyCodeResp
	SetPasswordReq     = pb.SetPasswordReq
	SetPasswordResp    = pb.SetPasswordResp
	SignInReq          = pb.SignInReq
	SignInResp         = pb.SignInResp
	User               = pb.User

	Auth interface {
		SignIn(ctx context.Context, in *SignInReq, opts ...grpc.CallOption) (*SignInResp, error)
		SetPassword(ctx context.Context, in *SetPasswordReq, opts ...grpc.CallOption) (*SetPasswordResp, error)
		SendVerifyCode(ctx context.Context, in *SendVerifyCodeReq, opts ...grpc.CallOption) (*SendVerifyCodeResp, error)
	}

	defaultAuth struct {
		cli zrpc.Client
	}
)

func NewAuth(cli zrpc.Client) Auth {
	return &defaultAuth{
		cli: cli,
	}
}

func (m *defaultAuth) SignIn(ctx context.Context, in *SignInReq, opts ...grpc.CallOption) (*SignInResp, error) {
	client := pb.NewAuthClient(m.cli.Conn())
	return client.SignIn(ctx, in, opts...)
}

func (m *defaultAuth) SetPassword(ctx context.Context, in *SetPasswordReq, opts ...grpc.CallOption) (*SetPasswordResp, error) {
	client := pb.NewAuthClient(m.cli.Conn())
	return client.SetPassword(ctx, in, opts...)
}

func (m *defaultAuth) SendVerifyCode(ctx context.Context, in *SendVerifyCodeReq, opts ...grpc.CallOption) (*SendVerifyCodeResp, error) {
	client := pb.NewAuthClient(m.cli.Conn())
	return client.SendVerifyCode(ctx, in, opts...)
}
